local userInputService = game:GetService("UserInputService")
local runService = game:GetService("RunService")
local player = game.Players.LocalPlayer
local Players = game:GetService("Players")
local gui = Instance.new("ScreenGui", game.CoreGui)
gui.Name = "Project"
local function isNumber(str)
  if tonumber(str) ~= nil or str == 'inf' then
    return true
  end
end

getgenv().HitboxSize = 13
getgenv().HitboxTransparency = 0.9
getgenv().HitboxStatus = false
getgenv().TeamCheck = false
getgenv().Walkspeed = game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed
getgenv().Jumppower = game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower
getgenv().TPSpeed = 3
getgenv().TPWalk = false

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Vcsk/UI-Library/main/Source/MyUILib(Unamed).lua"))();
local Window = Library:Create("Window")
local Toggle = Instance.new("TextButton", gui)
Toggle.Name = "Toggle"
Toggle.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
Toggle.BackgroundTransparency = 0.9
Toggle.Position = UDim2.new(0, 0, 0, 80)
Toggle.Size = UDim2.new(0, 60, 0, 30)
Toggle.Text = "Toggle"
Toggle.TextSize = 24
Toggle.TextColor3 = Color3.fromRGB(40, 40, 40)
Toggle.Font = Enum.Font.SourceSans
Toggle.Active = true
Toggle.Draggable = true
Toggle.MouseButton1Click:connect(function()
    Library:ToggleUI()
end)

function god()
    for _, part in pairs(workspace:GetDescendants()) do
        if part:IsA("BasePart") then
            if string.find(part.Name:lower(), "kill") or string.find(part.Name:lower(), "lava") or part.Material == Enum.Material.Neon then
                part.CanTouch = false
                part.CanCollide = true
                part.Transparency = 0.5
            end
        end
    end
end

function ungod()
    for _, part in pairs(workspace:GetDescendants()) do
        if part:IsA("BasePart") then
            if string.find(part.Name:lower(), "kill") or string.find(part.Name:lower(), "lava") or part.Material == Enum.Material.Neon then
                part.CanTouch = true
                part.CanCollide = true
                part.Transparency = 0
            end
        end
    end
end

local espEnabled = false
local espObjects = {}
local function applyESP(character)
    if character and character:FindFirstChild("HumanoidRootPart") then
        local billboard = Instance.new("BillboardGui", character)
        billboard.Adornee = character:FindFirstChild("Head")
        billboard.Size = UDim2.new(0, 180, 0, 40)
        billboard.StudsOffset = Vector3.new(0, 2, 0)
        billboard.AlwaysOnTop = true

        local textLabel = Instance.new("TextLabel", billboard)
        textLabel.Size = UDim2.new(1, 0, 1, 0)
        textLabel.BackgroundTransparency = 1
        textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        textLabel.Font = Enum.Font.GothamBold
        textLabel.TextSize = 14
        textLabel.TextStrokeTransparency = 0.5
        textLabel.Text = "Loading..."
        espObjects[character] = {highlight, billboard, textLabel}
    end
end

local function updateESP()
    for _, plr in pairs(game.Players:GetPlayers()) do

        if plr ~= player and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
            local char = plr.Character
            local rootPart = char:FindFirstChild("HumanoidRootPart")
            local humanoid = char:FindFirstChild("Humanoid")
            local espData = espObjects[char]

            if rootPart and humanoid and espData then
                local distance = (rootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
                local health = math.floor(humanoid.Health)
                local maxHealth = math.floor(humanoid.MaxHealth)
                espData[3].Text = string.format("%.1fm | %d/%d HP | %s", distance, health, maxHealth, plr.Name)
            end
        end
    end
end

local function refreshESP()
    for _, data in pairs(espObjects) do
        for _, obj in pairs(data) do
            obj:Destroy()
        end
    end

    espObjects = {}

    for _, plr in pairs(game.Players:GetPlayers()) do
        if plr ~= player and plr.Character then
            applyESP(plr.Character)
        end
    end
end

function toggleESP()
    espEnabled = not espEnabled

    if espEnabled then
        refreshESP()

        runService.RenderStepped:Connect(function()
            if espEnabled then
                updateESP()
            end
        end)
    else
        for _, data in pairs(espObjects) do
            for _, obj in pairs(data) do
                obj:Destroy()
            end
        end
        espObjects = {}
    end
end

local HomeTab = Window:Tab("Home","rbxassetid://78780430891192")
local PlayerTab = Window:Tab("Players","rbxassetid://112609464524168")
local VisualTab = Window:Tab("Visuals","rbxassetid://133040688818305")
local HubTab = Window:Tab("Script/Hub","rbxassetid://9940330045")
HomeTab:InfoLabel("Wellcome back "..player.Name.."!")
HomeTab:Section("Map Info")
HomeTab:Button("Name: "..game.MarketplaceService:GetProductInfo(game.PlaceId).Name.."", function()
    setclipboard(game.MarketplaceService:GetProductInfo(game.PlaceId).Name)
end)

HomeTab:Label("Max Players: "..game.Players.MaxPlayers.."")

HomeTab:Button("ID: "..game.PlaceId.."", function()
    setclipboard(game.PlaceId)
end)

HomeTab:Button("Job ID: \n"..game.JobId.."", function()
    setclipboard(game.JobId)
end)

HomeTab:Section("Setting")

HomeTab:Keybind("Toggle UI", Enum.KeyCode.F, function()
    Library:ToggleUI()
end)

HomeTab:Button("Rejoin", function()
    game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer)
end)


PlayerTab:InfoLabel("some script might be error!")
PlayerTab:Section("About you")
PlayerTab:Label("Username: "..player.Name.."")
PlayerTab:Label("Display Name: "..player.DisplayName.."")
PlayerTab:Label("ID: "..player.UserId.."")
PlayerTab:Label("Acc Age: "..player.AccountAge.."")
PlayerTab:Label("Language: "..game.LocalizationService.RobloxLocaleId.."")
PlayerTab:Label("Client ID: \n"..game:GetService("RbxAnalyticsService"):GetClientId().."")
PlayerTab:Label("MemberShip: "..player.MembershipType.Name.."")
PlayerTab:Section("LocalPlayer")
PlayerTab:TextBox("WalkSpeed", function(value)
    getgenv().Walkspeed = value
    pcall(function()
        game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = value
    end)
end)

PlayerTab:TextBox("JumpPower", function(value)
    getgenv().Jumppower = value
    pcall(function()
        game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = value
    end)
end)

PlayerTab:TextBox("TP Speed", function(value)
getgenv().TPSpeed = value
end)

PlayerTab:Toggle("Loop WalkSpeed", function(state)
    getgenv().loopW = state
    game:GetService("RunService").Heartbeat:Connect(function()
        if loopW == true then
            pcall(function()
                game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = Walkspeed
            end)
        end
    end)
end)

PlayerTab:Toggle("Loop JumpPower", function(state)
    getgenv().loopJ = state
    game:GetService("RunService").Heartbeat:Connect(function()
        if loopJ == true then
            pcall(function()
                game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = Jumppower
            end)
        end
    end)
end)

PlayerTab:Toggle("TP Walk", function(s)
getgenv().TPWalk = s
local hb = game:GetService("RunService").Heartbeat
local player = game:GetService("Players")
local lplr = player.LocalPlayer
local chr = lplr.Character
local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
while getgenv().TPWalk and hb:Wait() and chr and hum and hum.Parent do
  if hum.MoveDirection.Magnitude > 0 then
    if getgenv().TPSpeed and isNumber(getgenv().TPSpeed) then
      chr:TranslateBy(hum.MoveDirection * tonumber(getgenv().TPSpeed))
    else
      chr:TranslateBy(hum.MoveDirection)
    end
  end
end
end)

PlayerTab:Slider("Fov", game.Workspace.CurrentCamera.FieldOfView,120, function(v)
     game.Workspace.CurrentCamera.FieldOfView = v
end)

PlayerTab:Toggle("Noclip", function(s)
    getgenv().Noclip = s
    game:GetService("RunService").Heartbeat:Connect(function()
        if Noclip == true then
            game:GetService("RunService").Stepped:wait()
            game.Players.LocalPlayer.Character.Head.CanCollide = false
            game.Players.LocalPlayer.Character.Torso.CanCollide = false
        end
    end)
end)

PlayerTab:Toggle("Infinite Jump", function(s)
getgenv().InfJ = s
    game:GetService("UserInputService").JumpRequest:connect(function()
        if InfJ == true then
            game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
        end
    end)
end)

VisualTab:InfoLabel("some script might be error!")
VisualTab:Section("Visuals")
VisualTab:TextBox("Hitbox Size", function(value)
    getgenv().HitboxSize = value
end)

VisualTab:TextBox("Hitbox Transparency", function(number)
    getgenv().HitboxTransparency = number
end)

VisualTab:Toggle("Status: ", function(state)
	getgenv().HitboxStatus = state
    game:GetService('RunService').RenderStepped:connect(function()
		if HitboxStatus == true and TeamCheck == false then
			for i,v in next, game:GetService('Players'):GetPlayers() do
				if v.Name ~= game:GetService('Players').LocalPlayer.Name then
					pcall(function()
						v.Character.HumanoidRootPart.Size = Vector3.new(HitboxSize, HitboxSize, HitboxSize)
						v.Character.HumanoidRootPart.Transparency = HitboxTransparency
						v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really black")
						v.Character.HumanoidRootPart.Material = "Neon"
						v.Character.HumanoidRootPart.CanCollide = false
					end)
				end
			end
		elseif HitboxStatus == true and TeamCheck == true then
			for i,v in next, game:GetService('Players'):GetPlayers() do
				if game:GetService('Players').LocalPlayer.Team ~= v.Team then
					pcall(function()
						v.Character.HumanoidRootPart.Size = Vector3.new(HitboxSize, HitboxSize, HitboxSize)
						v.Character.HumanoidRootPart.Transparency = HitboxTransparency
						v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really black")
						v.Character.HumanoidRootPart.Material = "Neon"
						v.Character.HumanoidRootPart.CanCollide = false
					end)
				end
			end
		else
		    for i,v in next, game:GetService('Players'):GetPlayers() do
				if v.Name ~= game:GetService('Players').LocalPlayer.Name then
					pcall(function()
						v.Character.HumanoidRootPart.Size = Vector3.new(2,2,1)
						v.Character.HumanoidRootPart.Transparency = 1
						v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Medium stone grey")
						v.Character.HumanoidRootPart.Material = "Plastic"
						v.Character.HumanoidRootPart.CanCollide = false
					end)
				end
			end
		end
	end)
end)

VisualTab:Toggle("ESP", function(state)
getgenv().enabled = state
getgenv().filluseteamcolor = true
getgenv().outlineuseteamcolor = true
getgenv().fillcolor = Color3.new(255, 0, 0)
getgenv().outlinecolor = Color3.new(1, 1, 1)
getgenv().filltrans = 0.5
getgenv().outlinetrans = 0
loadstring(game:HttpGet("https://raw.githubusercontent.com/Vcsk/RobloxScripts/main/Highlight-ESP.lua"))()
end)

VisualTab:Toggle("Team Check", function(state)
    getgenv().TeamCheck = state
end)

VisualTab:Toggle("Billboard Text", function(state)
   local On = state
if On == true then
    toggleESP()
elseif On == false then
    toggleESP()
end
end)

VisualTab:Toggle("Killbrick", function(state2)
   local On = state2
if On == true then
    god()
elseif On == false then
    ungod()
end
end)

HubTab:InfoLabel("some script might be error!")
HubTab:Section("Hub/Gui")
HubTab:Section("Random Script")

