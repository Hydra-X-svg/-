-- Color Picker
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
pcall(function() player:WaitForChild("PlayerGui"):FindFirstChild("ColorPickerGui"):Destroy() end)
local colorPickerGui = Instance.new("ScreenGui", game.CoreGui)
colorPickerGui.Name = "ColorPickerGui"
colorPickerGui.ResetOnSpawn = false
local colorPalette = Instance.new("Frame", colorPickerGui)
colorPalette.Name = "ColorPalette"
colorPalette.Size = UDim2.new(0, 270, 0, 260)
colorPalette.Position = UDim2.new(0, 150, 0, 130)
colorPalette.AnchorPoint = Vector2.new(0.5, 0.5)
colorPalette.BackgroundColor3 = Color3.fromRGB(39, 39, 39)
colorPalette.BorderColor3 = Color3.new(0, 0, 0)
colorPalette.Active = true
colorPalette.Draggable = true
colorPalette.BorderSizePixel = 1
Instance.new("UICorner",colorPalette).CornerRadius=UDim.new(0,3)
Instance.new("UIStroke",colorPalette).Color=Color3.new(1,1,1)
 
-- Color palette (image)
local paletteButton = Instance.new("ImageButton", colorPalette)
paletteButton.Name = "ColorPalette"
paletteButton.Size = UDim2.new(0, 220, 0, 200)
paletteButton.Position = UDim2.new(0, 10, 0, 10)
paletteButton.BackgroundTransparency = 1
paletteButton.Image = "rbxassetid://102473392174763"
Instance.new("UIStroke",paletteButton).Color=Color3.new(1,1,1)
 
-- Cursor for the palette (image)
local crosshair = Instance.new("ImageLabel", paletteButton)
crosshair.Name = "ColorPaletteCrosshair"
crosshair.Size = UDim2.new(0, 30, 0, 30)
crosshair.BackgroundTransparency = 1
crosshair.Image = "rbxassetid://9841536429"
crosshair.ImageColor3 = Color3.new(0, 0, 0)
crosshair.AnchorPoint = Vector2.new(0.5, 0.5)
crosshair.Position = UDim2.new(0.5, 0, 0.5, 0)
crosshair.ZIndex = 5
 
-- Darkness bar 
local darknessAppearance = Instance.new("Frame", colorPalette)
darknessAppearance.Name = "DarknessAppearance"
darknessAppearance.Size = UDim2.new(0, 20, 0, 200)
darknessAppearance.Position = UDim2.new(0, 240, 0, 10)
darknessAppearance.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
darknessAppearance.BorderColor3 = Color3.new(1, 1, 1)
darknessAppearance.BorderSizePixel = 1
darknessAppearance.Active = true
Instance.new("UIStroke",darknessAppearance).Color=Color3.new(1,1,1)
local gradient = Instance.new("UIGradient", darknessAppearance)
gradient.Rotation = 270
gradient.Color = ColorSequence.new{
ColorSequenceKeypoint.new(0, Color3.fromRGB(0,0,0)),
ColorSequenceKeypoint.new(1, Color3.fromRGB(255,255,255)),
}

local darknessPointer = Instance.new("Frame", darknessAppearance)
darknessPointer.Name = "DarknessPointer"
darknessPointer.Size = UDim2.new(1, 0, 0, 6)
darknessPointer.BackgroundColor3 = Color3.new(0, 0, 0)
darknessPointer.BorderColor3 = Color3.new(0, 0, 0)
darknessPointer.BorderSizePixel = 1
darknessPointer.AnchorPoint = Vector2.new(0, 0.5)
darknessPointer.Position = UDim2.new(0, 0, 0, 0)
darknessPointer.ZIndex = 5

-- Selected color Display
local selectedColorDisplay = Instance.new("Frame", colorPalette)
selectedColorDisplay.Name = "SelectedColorDisplay"
selectedColorDisplay.Size = UDim2.new(0, 70, 0, 30)
selectedColorDisplay.Position = UDim2.new(0, 10, 0, 220)
selectedColorDisplay.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
selectedColorDisplay.BorderColor3 = Color3.new(0, 0, 0)
selectedColorDisplay.BorderSizePixel = 1
Instance.new("UICorner",selectedColorDisplay).CornerRadius=UDim.new(0,3)

-- RGB and HEX text inputs 
local function createTextBox(name, position, placeholder, Transparency)
    local tb = Instance.new("TextBox", colorPalette)
    tb.Name = name
    tb.Size = UDim2.new(0, 70, 0, 30)
    tb.Position = position
    tb.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    tb.BorderColor3 = Color3.new(0, 0, 0)
    tb.BorderSizePixel = 1
    tb.PlaceholderText = placeholder
    tb.TextSize = 14
    tb.Font = Enum.Font.SourceSans
    tb.BackgroundTransparency = Transparency
    tb.TextXAlignment = Enum.TextXAlignment.Center
    Instance.new("UICorner",tb).CornerRadius=UDim.new(0,3)
    return tb
end
 
local rgbInput = createTextBox("RGBInput", UDim2.new(0, 10, 0, 220), "R,G,B", "1")
local hexInput = createTextBox("HexInput", UDim2.new(0, 90, 0, 220), "#RRGGBB", "0")
local resetBtn = Instance.new("TextButton", colorPalette)
resetBtn.Name = "ResetButton"
resetBtn.Size = UDim2.new(0, 40, 0, 30)
resetBtn.Position = UDim2.new(0, 170, 0, 220)
resetBtn.Text = "Reset"
resetBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
resetBtn.TextSize = 12
resetBtn.Font = Enum.Font.SourceSans
resetBtn.TextColor3 = Color3.new(0, 0, 0)
Instance.new("UICorner",resetBtn).CornerRadius=UDim.new(0,3)

local copyBtn = Instance.new("TextButton", colorPalette)
copyBtn.Name = "CopyButton"
copyBtn.Size = UDim2.new(0, 40, 0, 30)
copyBtn.Position = UDim2.new(0, 220, 0, 220)
copyBtn.Text = "Copy"
copyBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
copyBtn.TextSize = 12
copyBtn.Font = Enum.Font.SourceSans
copyBtn.TextColor3 = Color3.new(0, 0, 0)
Instance.new("UICorner",copyBtn).CornerRadius=UDim.new(0,3)
 
-- Variables for cursor position control and darkness 
local draggingPalette = false
local draggingDarkness = false
local hueSat = Vector2.new(0.5, 0.5)
local darknessY = 0
local selectedColor = Color3.new(1, 1, 1)
 
-- Function to get relative position within a GUI 
local function getLocalPosition(guiObject, absPos)
    local guiPos = guiObject.AbsolutePosition
    local guiSize = guiObject.AbsoluteSize
    local relative = Vector2.new(absPos.X - guiPos.X, absPos.Y - guiPos.Y)
    relative = Vector2.new(
    math.clamp(relative.X / guiSize.X, 0, 1),
    math.clamp(relative.Y / guiSize.Y, 0, 1)
    )
    return relative
end
 
-- Function to interpolate base color according to hueSat.X 
local function interpolateColor(t)
    t = t * 6
    local segment = math.floor(t)
    local frac = t - segment
    local function lerpColor(a,b,f) return a + (b - a) * f end
    local r,g,b = 0,0,0
    if segment == 0 then r, g, b = 1, lerpColor(0,1,frac), 0
    elseif segment == 1 then r, g, b = lerpColor(1,0,frac),1,0
    elseif segment == 2 then r, g, b = 0,1,lerpColor(0,1,frac)
    elseif segment == 3 then r, g, b = 0, lerpColor(1,0,frac),1
    elseif segment == 4 then r, g, b = lerpColor(0,1,frac),0,1
    elseif segment == 5 then r, g, b = 1, 0, lerpColor(1,0,frac)
    end
        return Color3.new(r,g,b)
end
    
-- Function to update color and UI 
local function updateColor()
        local paletteSize = paletteButton.AbsoluteSize
        crosshair.Position = UDim2.new(
        0,
        math.clamp(hueSat.X * paletteSize.X, 0, paletteSize.X),
        0,
        math.clamp(hueSat.Y * paletteSize.Y, 0, paletteSize.Y)
        )
        
        local darknessSize = darknessAppearance.AbsoluteSize  
        local yPos = math.clamp(darknessY * darknessSize.Y, 0, darknessSize.Y)  
        darknessPointer.Position = UDim2.new(0, 0, 0, yPos - darknessPointer.AbsoluteSize.Y/2)
        local baseColor = interpolateColor(hueSat.X)  
        local sat = hueSat.Y  
        local finalColor = Color3.new(  
        baseColor.R + (1 - baseColor.R) * sat,  
        baseColor.G + (1 - baseColor.G) * sat,  
        baseColor.B + (1 - baseColor.B) * sat  
        )  
        
        local darknessFactor = 1 - darknessY  
        finalColor = Color3.new(  
        finalColor.R * darknessFactor,  
        finalColor.G * darknessFactor,  
        finalColor.B * darknessFactor  
        )  
        
        selectedColor = finalColor  
        selectedColorDisplay.BackgroundColor3 = finalColor
        
        -- Update inputs  
        rgbInput.Text = string.format("%d, %d, %d",  
        math.floor(finalColor.R * 255),  
        math.floor(finalColor.G * 255),  
        math.floor(finalColor.B * 255)  
        )  
        hexInput.Text = string.format("#%02X%02X%02X",  
        math.floor(finalColor.R * 255),  
        math.floor(finalColor.G * 255),  
        math.floor(finalColor.B * 255)  
        )
        
end
    
-- Events to move the palette cursor 
paletteButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        draggingPalette = true
        local pos = getLocalPosition(paletteButton, Vector2.new(input.Position.X, input.Position.Y))
        hueSat = pos
        updateColor()
    end
end)
    
paletteButton.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        draggingPalette = false
    end
end)
    
-- Events to move the darkness cursor
darknessAppearance.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        draggingDarkness = true
        local pos = getLocalPosition(darknessAppearance, Vector2.new(input.Position.X, input.Position.Y))
        darknessY = pos.Y
        updateColor()
    end
end)
    
darknessAppearance.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        draggingDarkness = false
    end
end)
    
-- Continue update when dragging 
UserInputService.InputChanged:Connect(function(input)
    if draggingPalette and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        local pos = getLocalPosition(paletteButton, Vector2.new(input.Position.X, input.Position.Y))
        hueSat = pos
        updateColor()
    elseif draggingDarkness and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        local pos = getLocalPosition(darknessAppearance, Vector2.new(input.Position.X, input.Position.Y))
        darknessY = pos.Y
        updateColor()
    end
end)
    
-- Manual RGB inputs 
rgbInput.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        local r, g, b = string.match(rgbInput.Text, "(%d+)%s*,%s*(%d+)%s*,%s*(%d+)")
        if r and g and b then
            r, g, b = tonumber(r), tonumber(g), tonumber(b)
            if r and g and b and r <= 255 and g <= 255 and b <= 255 then
                local color = Color3.fromRGB(r, g, b)
                selectedColor = color
                selectedColorDisplay.BackgroundColor3 = color
                updateColor()
            else
                rgbInput.Text = "Error"
            end
        else
            rgbInput.Text = "Invalid format"
        end
    end
end)
    
local function hexToColor3(hex)
    hex = hex:gsub("#", "")
    if #hex == 6 then
        local r = tonumber(hex:sub(1,2), 16)
        local g = tonumber(hex:sub(3,4), 16)
        local b = tonumber(hex:sub(5,6), 16)
        if r and g and b then
            return Color3.fromRGB(r, g, b)
        end
    end
    return nil
end
    
-- Hexadecimal input 
hexInput.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        local color = hexToColor3(hexInput.Text)
        if color then
            selectedColor = color
            selectedColorDisplay.BackgroundColor3 = color
            updateColor()
        else
            hexInput.Text = "Invalid"
        end
    end
end)
    
resetBtn.MouseButton1Click:Connect(function()
   hueSat = Vector2.new(0.5, 0.5)
   darknessY = 0
   updateColor()
end)
    
copyBtn.MouseButton1Click:Connect(function()
   setclipboard(rgbInput.Text)
end)
